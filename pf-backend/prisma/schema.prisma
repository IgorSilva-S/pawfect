// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  phone        String         @db.VarChar(15)
  address      String         @db.VarChar(255)
  deleted      Boolean        @default(false)
  createdAt    DateTime       @default(now()) @db.Timestamp(3)
  updatedAt    DateTime       @updatedAt @db.Timestamp(3)
  transactions Transactions[]
  cart         Cart[]
}

model Product {
  id           Int            @id @default(autoincrement())
  prodName     String         @db.VarChar(50)
  prodValue    Decimal        @db.Decimal(8, 2)
  avaliation   Decimal        @db.Decimal(3, 1)
  imageLink    String         @db.VarChar(255)
  category     String         @db.VarChar(255)
  subCategory  String?        @db.VarChar(255)
  deleted      Boolean        @default(false)
  transactions Transactions[]
  cart         Cart[]
}

model Transactions {
  id         Int      @id @default(autoincrement())
  prodId     Int
  userId     Int
  qnt        Int
  geralValue Decimal  @db.Decimal(8, 2)
  deleted    Boolean  @default(false)
  transDate  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  product    Product  @relation(fields: [prodId], references: [id])
}

model Cart {
  id      Int      @id @default(autoincrement())
  prodId  Int
  userId  Int
  addedIn DateTime @default(now())
  user    User     @relation(fields: [userId], references: [id])
  product Product  @relation(fields: [prodId], references: [id])
}
